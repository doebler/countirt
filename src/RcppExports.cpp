// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppGSL.h>
#include <Rcpp.h>

using namespace Rcpp;

// logFactorial
double logFactorial(int n);
RcppExport SEXP _countirt_logFactorial(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(logFactorial(n));
    return rcpp_result_gen;
END_RCPP
}
// computeA
double computeA(double lambda, double mu, double nu, double log_Z, double min_iter);
RcppExport SEXP _countirt_computeA(SEXP lambdaSEXP, SEXP muSEXP, SEXP nuSEXP, SEXP log_ZSEXP, SEXP min_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type log_Z(log_ZSEXP);
    Rcpp::traits::input_parameter< double >::type min_iter(min_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(computeA(lambda, mu, nu, log_Z, min_iter));
    return rcpp_result_gen;
END_RCPP
}
// computeB
double computeB(double lambda, double mu, double nu, double log_Z, double min_iter);
RcppExport SEXP _countirt_computeB(SEXP lambdaSEXP, SEXP muSEXP, SEXP nuSEXP, SEXP log_ZSEXP, SEXP min_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type log_Z(log_ZSEXP);
    Rcpp::traits::input_parameter< double >::type min_iter(min_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(computeB(lambda, mu, nu, log_Z, min_iter));
    return rcpp_result_gen;
END_RCPP
}
// computeQ
double computeQ(double lambda, double mu, double nu, double min_iter);
RcppExport SEXP _countirt_computeQ(SEXP lambdaSEXP, SEXP muSEXP, SEXP nuSEXP, SEXP min_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type min_iter(min_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(computeQ(lambda, mu, nu, min_iter));
    return rcpp_result_gen;
END_RCPP
}
// computeW
double computeW(double lambda, double mu, double nu, double min_iter);
RcppExport SEXP _countirt_computeW(SEXP lambdaSEXP, SEXP muSEXP, SEXP nuSEXP, SEXP min_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type min_iter(min_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(computeW(lambda, mu, nu, min_iter));
    return rcpp_result_gen;
END_RCPP
}
// computeR
double computeR(double lambda, double mu, double nu, double log_Z, double min_iter);
RcppExport SEXP _countirt_computeR(SEXP lambdaSEXP, SEXP muSEXP, SEXP nuSEXP, SEXP log_ZSEXP, SEXP min_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type log_Z(log_ZSEXP);
    Rcpp::traits::input_parameter< double >::type min_iter(min_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(computeR(lambda, mu, nu, log_Z, min_iter));
    return rcpp_result_gen;
END_RCPP
}
// computepp
NumericVector computepp(NumericVector dens, double quad_weight, NumericVector marg_prob);
RcppExport SEXP _countirt_computepp(SEXP densSEXP, SEXP quad_weightSEXP, SEXP marg_probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type dens(densSEXP);
    Rcpp::traits::input_parameter< double >::type quad_weight(quad_weightSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type marg_prob(marg_probSEXP);
    rcpp_result_gen = Rcpp::wrap(computepp(dens, quad_weight, marg_prob));
    return rcpp_result_gen;
END_RCPP
}
// computepp_allnodes
NumericMatrix computepp_allnodes(NumericMatrix dens, NumericVector quad_weight, NumericVector marg_prob);
RcppExport SEXP _countirt_computepp_allnodes(SEXP densSEXP, SEXP quad_weightSEXP, SEXP marg_probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type dens(densSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type quad_weight(quad_weightSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type marg_prob(marg_probSEXP);
    rcpp_result_gen = Rcpp::wrap(computepp_allnodes(dens, quad_weight, marg_prob));
    return rcpp_result_gen;
END_RCPP
}
// computer
double computer(NumericVector resp, NumericVector pp);
RcppExport SEXP _countirt_computer(SEXP respSEXP, SEXP ppSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type resp(respSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pp(ppSEXP);
    rcpp_result_gen = Rcpp::wrap(computer(resp, pp));
    return rcpp_result_gen;
END_RCPP
}
// computer_allnodes
NumericVector computer_allnodes(NumericVector resp, NumericMatrix pp);
RcppExport SEXP _countirt_computer_allnodes(SEXP respSEXP, SEXP ppSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type resp(respSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pp(ppSEXP);
    rcpp_result_gen = Rcpp::wrap(computer_allnodes(resp, pp));
    return rcpp_result_gen;
END_RCPP
}
// computef
double computef(NumericVector pp);
RcppExport SEXP _countirt_computef(SEXP ppSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pp(ppSEXP);
    rcpp_result_gen = Rcpp::wrap(computef(pp));
    return rcpp_result_gen;
END_RCPP
}
// computef_allnodes
NumericVector computef_allnodes(NumericMatrix pp);
RcppExport SEXP _countirt_computef_allnodes(SEXP ppSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type pp(ppSEXP);
    rcpp_result_gen = Rcpp::wrap(computef_allnodes(pp));
    return rcpp_result_gen;
END_RCPP
}
// computeh
double computeh(NumericVector resp, NumericVector pp);
RcppExport SEXP _countirt_computeh(SEXP respSEXP, SEXP ppSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type resp(respSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pp(ppSEXP);
    rcpp_result_gen = Rcpp::wrap(computeh(resp, pp));
    return rcpp_result_gen;
END_RCPP
}
// computeh_allnodes
NumericVector computeh_allnodes(NumericVector resp, NumericMatrix pp);
RcppExport SEXP _countirt_computeh_allnodes(SEXP respSEXP, SEXP ppSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type resp(respSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pp(ppSEXP);
    rcpp_result_gen = Rcpp::wrap(computeh_allnodes(resp, pp));
    return rcpp_result_gen;
END_RCPP
}
// interp_from_grid
double interp_from_grid(NumericVector mu, NumericVector nu, NumericVector grid_long, const double mu0, const double nu0);
RcppExport SEXP _countirt_interp_from_grid(SEXP muSEXP, SEXP nuSEXP, SEXP grid_longSEXP, SEXP mu0SEXP, SEXP nu0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_long(grid_longSEXP);
    Rcpp::traits::input_parameter< const double >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< const double >::type nu0(nu0SEXP);
    rcpp_result_gen = Rcpp::wrap(interp_from_grid(mu, nu, grid_long, mu0, nu0));
    return rcpp_result_gen;
END_RCPP
}
// interp_from_grid_v
NumericVector interp_from_grid_v(NumericVector mu, NumericVector nu, NumericVector grid_long, NumericVector mu0_v, NumericVector nu0_v);
RcppExport SEXP _countirt_interp_from_grid_v(SEXP muSEXP, SEXP nuSEXP, SEXP grid_longSEXP, SEXP mu0_vSEXP, SEXP nu0_vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_long(grid_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu0_v(mu0_vSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nu0_v(nu0_vSEXP);
    rcpp_result_gen = Rcpp::wrap(interp_from_grid_v(mu, nu, grid_long, mu0_v, nu0_v));
    return rcpp_result_gen;
END_RCPP
}
// interp_from_grid_m
NumericMatrix interp_from_grid_m(NumericVector mu, NumericVector nu, NumericVector grid_long, NumericMatrix mu0_m, NumericMatrix nu0_m);
RcppExport SEXP _countirt_interp_from_grid_m(SEXP muSEXP, SEXP nuSEXP, SEXP grid_longSEXP, SEXP mu0_mSEXP, SEXP nu0_mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_long(grid_longSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mu0_m(mu0_mSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type nu0_m(nu0_mSEXP);
    rcpp_result_gen = Rcpp::wrap(interp_from_grid_m(mu, nu, grid_long, mu0_m, nu0_m));
    return rcpp_result_gen;
END_RCPP
}
// interp_from_grid_lin_m
NumericMatrix interp_from_grid_lin_m(NumericVector mu, NumericVector nu, NumericVector grid_long, NumericMatrix mu0_m, NumericMatrix nu0_m);
RcppExport SEXP _countirt_interp_from_grid_lin_m(SEXP muSEXP, SEXP nuSEXP, SEXP grid_longSEXP, SEXP mu0_mSEXP, SEXP nu0_mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_long(grid_longSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mu0_m(mu0_mSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type nu0_m(nu0_mSEXP);
    rcpp_result_gen = Rcpp::wrap(interp_from_grid_lin_m(mu, nu, grid_long, mu0_m, nu0_m));
    return rcpp_result_gen;
END_RCPP
}
// dcmp_cpp
NumericVector dcmp_cpp(NumericVector data, NumericVector mu, NumericVector nu, bool logprob, NumericVector all_mus_lambda, NumericVector all_nus_lambda, NumericVector all_mus_logZ, NumericVector all_nus_logZ, NumericVector grid_long_log_lambda, NumericVector grid_long_logZ);
RcppExport SEXP _countirt_dcmp_cpp(SEXP dataSEXP, SEXP muSEXP, SEXP nuSEXP, SEXP logprobSEXP, SEXP all_mus_lambdaSEXP, SEXP all_nus_lambdaSEXP, SEXP all_mus_logZSEXP, SEXP all_nus_logZSEXP, SEXP grid_long_log_lambdaSEXP, SEXP grid_long_logZSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< bool >::type logprob(logprobSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type all_mus_lambda(all_mus_lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type all_nus_lambda(all_nus_lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type all_mus_logZ(all_mus_logZSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type all_nus_logZ(all_nus_logZSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_long_log_lambda(grid_long_log_lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_long_logZ(grid_long_logZSEXP);
    rcpp_result_gen = Rcpp::wrap(dcmp_cpp(data, mu, nu, logprob, all_mus_lambda, all_nus_lambda, all_mus_logZ, all_nus_logZ, grid_long_log_lambda, grid_long_logZ));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_cpp
NumericVector grad_cmp_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector nodes, NumericVector weights, NumericMatrix r, NumericMatrix f, NumericMatrix h, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, NumericVector grid_W_long, NumericVector grid_R_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_cmp_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP nodesSEXP, SEXP weightsSEXP, SEXP rSEXP, SEXP fSEXP, SEXP hSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP grid_W_longSEXP, SEXP grid_R_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type r(rSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_W_long(grid_W_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_R_long(grid_R_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_cpp(alphas, deltas, disps, nodes, weights, r, f, h, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, grid_W_long, grid_R_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_fixdisps_cpp
NumericVector grad_cmp_fixdisps_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector nodes, NumericMatrix r, NumericMatrix f, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, double max_mu);
RcppExport SEXP _countirt_grad_cmp_fixdisps_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP nodesSEXP, SEXP rSEXP, SEXP fSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP max_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type r(rSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_fixdisps_cpp(alphas, deltas, disps, nodes, r, f, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, max_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_fixalphas_cpp
NumericVector grad_cmp_fixalphas_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector nodes, NumericMatrix r, NumericMatrix f, NumericMatrix h, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu);
RcppExport SEXP _countirt_grad_cmp_fixalphas_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP nodesSEXP, SEXP rSEXP, SEXP fSEXP, SEXP hSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type r(rSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_fixalphas_cpp(alphas, deltas, disps, nodes, r, f, h, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_logdisps_cpp
NumericVector grad_cmp_logdisps_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector nodes, NumericVector weights, NumericMatrix r, NumericMatrix f, NumericMatrix h, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu);
RcppExport SEXP _countirt_grad_cmp_logdisps_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP nodesSEXP, SEXP weightsSEXP, SEXP rSEXP, SEXP fSEXP, SEXP hSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type r(rSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_logdisps_cpp(alphas, deltas, disps, nodes, weights, r, f, h, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_samedisp_cpp
NumericVector grad_cmp_samedisp_cpp(NumericVector alphas, NumericVector deltas, double disp, NumericVector nodes, NumericVector weights, NumericMatrix r, NumericMatrix f, NumericMatrix h, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, NumericVector grid_W_long, NumericVector grid_R_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_cmp_samedisp_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispSEXP, SEXP nodesSEXP, SEXP weightsSEXP, SEXP rSEXP, SEXP fSEXP, SEXP hSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP grid_W_longSEXP, SEXP grid_R_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< double >::type disp(dispSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type r(rSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_W_long(grid_W_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_R_long(grid_R_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_samedisp_cpp(alphas, deltas, disp, nodes, weights, r, f, h, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, grid_W_long, grid_R_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_samedisp_cpp_lininterp
NumericVector grad_cmp_samedisp_cpp_lininterp(NumericVector alphas, NumericVector deltas, double disp, NumericVector nodes, NumericVector weights, NumericMatrix r, NumericMatrix f, NumericMatrix h, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_W_long, NumericVector grid_R_long, double max_mu);
RcppExport SEXP _countirt_grad_cmp_samedisp_cpp_lininterp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispSEXP, SEXP nodesSEXP, SEXP weightsSEXP, SEXP rSEXP, SEXP fSEXP, SEXP hSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_W_longSEXP, SEXP grid_R_longSEXP, SEXP max_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< double >::type disp(dispSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type r(rSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_W_long(grid_W_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_R_long(grid_R_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_samedisp_cpp_lininterp(alphas, deltas, disp, nodes, weights, r, f, h, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_W_long, grid_R_long, max_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_samealpha_cpp
NumericVector grad_cmp_samealpha_cpp(double alpha, NumericVector deltas, NumericVector disps, NumericVector nodes, NumericVector weights, NumericMatrix r, NumericMatrix f, NumericMatrix h, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu);
RcppExport SEXP _countirt_grad_cmp_samealpha_cpp(SEXP alphaSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP nodesSEXP, SEXP weightsSEXP, SEXP rSEXP, SEXP fSEXP, SEXP hSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type r(rSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_samealpha_cpp(alpha, deltas, disps, nodes, weights, r, f, h, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu));
    return rcpp_result_gen;
END_RCPP
}
// ell_cmp_cpp
double ell_cmp_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector nodes, NumericMatrix r, NumericMatrix f, NumericMatrix h, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_logZ_long, NumericVector grid_log_lambda_long, double max_mu);
RcppExport SEXP _countirt_ell_cmp_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP nodesSEXP, SEXP rSEXP, SEXP fSEXP, SEXP hSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_logZ_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP max_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type r(rSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    rcpp_result_gen = Rcpp::wrap(ell_cmp_cpp(alphas, deltas, disps, nodes, r, f, h, grid_mus, grid_nus, grid_logZ_long, grid_log_lambda_long, max_mu));
    return rcpp_result_gen;
END_RCPP
}
// e_values_cpp
NumericMatrix e_values_cpp(NumericMatrix data, NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector nodes, NumericVector weights, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_logZ_long, NumericVector grid_log_lambda_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_e_values_cpp(SEXP dataSEXP, SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP nodesSEXP, SEXP weightsSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_logZ_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(e_values_cpp(data, alphas, deltas, disps, nodes, weights, grid_mus, grid_nus, grid_logZ_long, grid_log_lambda_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// e_values_cpp_lininterp
NumericMatrix e_values_cpp_lininterp(NumericMatrix data, NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector nodes, NumericVector weights, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_logZ_long, NumericVector grid_log_lambda_long, double max_mu);
RcppExport SEXP _countirt_e_values_cpp_lininterp(SEXP dataSEXP, SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP nodesSEXP, SEXP weightsSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_logZ_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP max_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    rcpp_result_gen = Rcpp::wrap(e_values_cpp_lininterp(data, alphas, deltas, disps, nodes, weights, grid_mus, grid_nus, grid_logZ_long, grid_log_lambda_long, max_mu));
    return rcpp_result_gen;
END_RCPP
}
// marg_ll_cpp
double marg_ll_cpp(NumericMatrix data, NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector nodes, NumericVector weights, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_logZ_long, NumericVector grid_log_lambda_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_marg_ll_cpp(SEXP dataSEXP, SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP nodesSEXP, SEXP weightsSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_logZ_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(marg_ll_cpp(data, alphas, deltas, disps, nodes, weights, grid_mus, grid_nus, grid_logZ_long, grid_log_lambda_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// marg_ll_cpp_lininterp
double marg_ll_cpp_lininterp(NumericMatrix data, NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector nodes, NumericVector weights, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_logZ_long, NumericVector grid_log_lambda_long);
RcppExport SEXP _countirt_marg_ll_cpp_lininterp(SEXP dataSEXP, SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP nodesSEXP, SEXP weightsSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_logZ_longSEXP, SEXP grid_log_lambda_longSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    rcpp_result_gen = Rcpp::wrap(marg_ll_cpp_lininterp(data, alphas, deltas, disps, nodes, weights, grid_mus, grid_nus, grid_logZ_long, grid_log_lambda_long));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_newem_cpp
NumericVector grad_cmp_newem_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericMatrix data, NumericVector exp_abilities, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_cmp_newem_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP dataSEXP, SEXP exp_abilitiesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type exp_abilities(exp_abilitiesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_newem_cpp(alphas, deltas, disps, data, exp_abilities, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_newem_cpp2
NumericVector grad_cmp_newem_cpp2(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericMatrix data, NumericMatrix PPs, NumericVector nodes, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_cmp_newem_cpp2(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP dataSEXP, SEXP PPsSEXP, SEXP nodesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PPs(PPsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_newem_cpp2(alphas, deltas, disps, data, PPs, nodes, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_with_pcov_cpp
NumericVector grad_cmp_with_pcov_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector betas, NumericMatrix data, NumericMatrix p_cov_data, NumericMatrix PPs, NumericVector nodes, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_cmp_with_pcov_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP betasSEXP, SEXP dataSEXP, SEXP p_cov_dataSEXP, SEXP PPsSEXP, SEXP nodesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type p_cov_data(p_cov_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PPs(PPsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_with_pcov_cpp(alphas, deltas, disps, betas, data, p_cov_data, PPs, nodes, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_with_icov_cpp
NumericVector grad_cmp_with_icov_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector betas, NumericMatrix data, NumericMatrix i_cov_data, NumericMatrix PPs, NumericVector nodes, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_cmp_with_icov_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP betasSEXP, SEXP dataSEXP, SEXP i_cov_dataSEXP, SEXP PPsSEXP, SEXP nodesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type i_cov_data(i_cov_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PPs(PPsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_with_icov_cpp(alphas, deltas, disps, betas, data, i_cov_data, PPs, nodes, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_fixdisps_newem_cpp
NumericVector grad_cmp_fixdisps_newem_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericMatrix data, NumericMatrix PPs, NumericVector nodes, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_cmp_fixdisps_newem_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP dataSEXP, SEXP PPsSEXP, SEXP nodesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PPs(PPsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_fixdisps_newem_cpp(alphas, deltas, disps, data, PPs, nodes, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_with_pcov_fixdisps_cpp
NumericVector grad_cmp_with_pcov_fixdisps_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector betas, NumericMatrix data, NumericMatrix p_cov_data, NumericMatrix PPs, NumericVector nodes, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_cmp_with_pcov_fixdisps_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP betasSEXP, SEXP dataSEXP, SEXP p_cov_dataSEXP, SEXP PPsSEXP, SEXP nodesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type p_cov_data(p_cov_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PPs(PPsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_with_pcov_fixdisps_cpp(alphas, deltas, disps, betas, data, p_cov_data, PPs, nodes, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_with_icov_fixdisps_cpp
NumericVector grad_cmp_with_icov_fixdisps_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector betas, NumericMatrix data, NumericMatrix i_cov_data, NumericMatrix PPs, NumericVector nodes, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_cmp_with_icov_fixdisps_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP betasSEXP, SEXP dataSEXP, SEXP i_cov_dataSEXP, SEXP PPsSEXP, SEXP nodesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type i_cov_data(i_cov_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PPs(PPsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_with_icov_fixdisps_cpp(alphas, deltas, disps, betas, data, i_cov_data, PPs, nodes, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_fixalphas_newem_cpp
NumericVector grad_cmp_fixalphas_newem_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericMatrix data, NumericMatrix PPs, NumericVector nodes, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_cmp_fixalphas_newem_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP dataSEXP, SEXP PPsSEXP, SEXP nodesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PPs(PPsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_fixalphas_newem_cpp(alphas, deltas, disps, data, PPs, nodes, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_with_pcov_fixalphas_cpp
NumericVector grad_cmp_with_pcov_fixalphas_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector betas, NumericMatrix data, NumericMatrix p_cov_data, NumericMatrix PPs, NumericVector nodes, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_cmp_with_pcov_fixalphas_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP betasSEXP, SEXP dataSEXP, SEXP p_cov_dataSEXP, SEXP PPsSEXP, SEXP nodesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type p_cov_data(p_cov_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PPs(PPsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_with_pcov_fixalphas_cpp(alphas, deltas, disps, betas, data, p_cov_data, PPs, nodes, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_with_icov_fixalphas_cpp
NumericVector grad_cmp_with_icov_fixalphas_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector betas, NumericMatrix data, NumericMatrix i_cov_data, NumericMatrix PPs, NumericVector nodes, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_cmp_with_icov_fixalphas_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP betasSEXP, SEXP dataSEXP, SEXP i_cov_dataSEXP, SEXP PPsSEXP, SEXP nodesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type i_cov_data(i_cov_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PPs(PPsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_with_icov_fixalphas_cpp(alphas, deltas, disps, betas, data, i_cov_data, PPs, nodes, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_samedisps_newem_cpp
NumericVector grad_cmp_samedisps_newem_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericMatrix data, NumericMatrix PPs, NumericVector nodes, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_cmp_samedisps_newem_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP dataSEXP, SEXP PPsSEXP, SEXP nodesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PPs(PPsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_samedisps_newem_cpp(alphas, deltas, disps, data, PPs, nodes, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_with_pcov_samedisps_cpp
NumericVector grad_cmp_with_pcov_samedisps_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector betas, NumericMatrix data, NumericMatrix p_cov_data, NumericMatrix PPs, NumericVector nodes, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_cmp_with_pcov_samedisps_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP betasSEXP, SEXP dataSEXP, SEXP p_cov_dataSEXP, SEXP PPsSEXP, SEXP nodesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type p_cov_data(p_cov_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PPs(PPsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_with_pcov_samedisps_cpp(alphas, deltas, disps, betas, data, p_cov_data, PPs, nodes, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_with_icov_samedisps_cpp
NumericVector grad_cmp_with_icov_samedisps_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector betas, NumericMatrix data, NumericMatrix i_cov_data, NumericMatrix PPs, NumericVector nodes, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_cmp_with_icov_samedisps_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP betasSEXP, SEXP dataSEXP, SEXP i_cov_dataSEXP, SEXP PPsSEXP, SEXP nodesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type i_cov_data(i_cov_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PPs(PPsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_with_icov_samedisps_cpp(alphas, deltas, disps, betas, data, i_cov_data, PPs, nodes, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_samealphas_newem_cpp
NumericVector grad_cmp_samealphas_newem_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericMatrix data, NumericMatrix PPs, NumericVector nodes, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_cmp_samealphas_newem_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP dataSEXP, SEXP PPsSEXP, SEXP nodesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PPs(PPsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_samealphas_newem_cpp(alphas, deltas, disps, data, PPs, nodes, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_with_pcov_samealphas_cpp
NumericVector grad_cmp_with_pcov_samealphas_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector gammas, NumericMatrix data, NumericMatrix p_cov_data, NumericMatrix PPs, NumericVector nodes, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_cmp_with_pcov_samealphas_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP gammasSEXP, SEXP dataSEXP, SEXP p_cov_dataSEXP, SEXP PPsSEXP, SEXP nodesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gammas(gammasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type p_cov_data(p_cov_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PPs(PPsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_with_pcov_samealphas_cpp(alphas, deltas, disps, gammas, data, p_cov_data, PPs, nodes, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_cmp_with_icov_samealphas_cpp
NumericVector grad_cmp_with_icov_samealphas_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector betas, NumericMatrix data, NumericMatrix i_cov_data, NumericMatrix PPs, NumericVector nodes, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_cmp_with_icov_samealphas_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP betasSEXP, SEXP dataSEXP, SEXP i_cov_dataSEXP, SEXP PPsSEXP, SEXP nodesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type i_cov_data(i_cov_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PPs(PPsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cmp_with_icov_samealphas_cpp(alphas, deltas, disps, betas, data, i_cov_data, PPs, nodes, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// grad_ll_cmp_ability_1P_cpp
double grad_ll_cmp_ability_1P_cpp(double ability, NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector data, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_grad_ll_cmp_ability_1P_cpp(SEXP abilitySEXP, SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP dataSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type ability(abilitySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_ll_cmp_ability_1P_cpp(ability, alphas, deltas, disps, data, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// ell_cmp_newem_cpp
double ell_cmp_newem_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericMatrix data, NumericVector exp_abilities, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_ell_cmp_newem_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP dataSEXP, SEXP exp_abilitiesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type exp_abilities(exp_abilitiesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(ell_cmp_newem_cpp(alphas, deltas, disps, data, exp_abilities, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// ell_cmp_with_pcov_cpp
double ell_cmp_with_pcov_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector gammas, NumericMatrix data, NumericMatrix p_cov_data, NumericVector PPs, NumericVector weights, NumericVector nodes, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_ell_cmp_with_pcov_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP gammasSEXP, SEXP dataSEXP, SEXP p_cov_dataSEXP, SEXP PPsSEXP, SEXP weightsSEXP, SEXP nodesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gammas(gammasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type p_cov_data(p_cov_dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type PPs(PPsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(ell_cmp_with_pcov_cpp(alphas, deltas, disps, gammas, data, p_cov_data, PPs, weights, nodes, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// ell_cmp_with_icov_cpp
double ell_cmp_with_icov_cpp(NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector betas, NumericMatrix data, NumericMatrix i_cov_data, NumericVector PPs, NumericVector weights, NumericVector nodes, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_cmp_var_long, NumericVector grid_log_lambda_long, NumericVector grid_logZ_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_ell_cmp_with_icov_cpp(SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP betasSEXP, SEXP dataSEXP, SEXP i_cov_dataSEXP, SEXP PPsSEXP, SEXP weightsSEXP, SEXP nodesSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_cmp_var_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP grid_logZ_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type i_cov_data(i_cov_dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type PPs(PPsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_cmp_var_long(grid_cmp_var_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(ell_cmp_with_icov_cpp(alphas, deltas, disps, betas, data, i_cov_data, PPs, weights, nodes, grid_mus, grid_nus, grid_cmp_var_long, grid_log_lambda_long, grid_logZ_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// e_values_newem_cpp
NumericVector e_values_newem_cpp(NumericMatrix data, NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector nodes, NumericVector weights, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_logZ_long, NumericVector grid_log_lambda_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_e_values_newem_cpp(SEXP dataSEXP, SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP nodesSEXP, SEXP weightsSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_logZ_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(e_values_newem_cpp(data, alphas, deltas, disps, nodes, weights, grid_mus, grid_nus, grid_logZ_long, grid_log_lambda_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// e_values_newem_cpp2
NumericMatrix e_values_newem_cpp2(NumericMatrix data, NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector nodes, NumericVector weights, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_logZ_long, NumericVector grid_log_lambda_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_e_values_newem_cpp2(SEXP dataSEXP, SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP nodesSEXP, SEXP weightsSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_logZ_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(e_values_newem_cpp2(data, alphas, deltas, disps, nodes, weights, grid_mus, grid_nus, grid_logZ_long, grid_log_lambda_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// estep_cmp_with_icov_cpp
NumericMatrix estep_cmp_with_icov_cpp(NumericMatrix data, NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector betas, NumericMatrix i_cov_data, NumericVector nodes, NumericVector weights, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_logZ_long, NumericVector grid_log_lambda_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_estep_cmp_with_icov_cpp(SEXP dataSEXP, SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP betasSEXP, SEXP i_cov_dataSEXP, SEXP nodesSEXP, SEXP weightsSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_logZ_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type i_cov_data(i_cov_dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(estep_cmp_with_icov_cpp(data, alphas, deltas, disps, betas, i_cov_data, nodes, weights, grid_mus, grid_nus, grid_logZ_long, grid_log_lambda_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}
// estep_cmp_with_pcov_cpp
NumericMatrix estep_cmp_with_pcov_cpp(NumericMatrix data, NumericVector alphas, NumericVector deltas, NumericVector disps, NumericVector betas, NumericMatrix p_cov_data, NumericVector nodes, NumericVector weights, NumericVector grid_mus, NumericVector grid_nus, NumericVector grid_logZ_long, NumericVector grid_log_lambda_long, double max_mu, double min_mu);
RcppExport SEXP _countirt_estep_cmp_with_pcov_cpp(SEXP dataSEXP, SEXP alphasSEXP, SEXP deltasSEXP, SEXP dispsSEXP, SEXP betasSEXP, SEXP p_cov_dataSEXP, SEXP nodesSEXP, SEXP weightsSEXP, SEXP grid_musSEXP, SEXP grid_nusSEXP, SEXP grid_logZ_longSEXP, SEXP grid_log_lambda_longSEXP, SEXP max_muSEXP, SEXP min_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disps(dispsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type p_cov_data(p_cov_dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_mus(grid_musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_nus(grid_nusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_logZ_long(grid_logZ_longSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_log_lambda_long(grid_log_lambda_longSEXP);
    Rcpp::traits::input_parameter< double >::type max_mu(max_muSEXP);
    Rcpp::traits::input_parameter< double >::type min_mu(min_muSEXP);
    rcpp_result_gen = Rcpp::wrap(estep_cmp_with_pcov_cpp(data, alphas, deltas, disps, betas, p_cov_data, nodes, weights, grid_mus, grid_nus, grid_logZ_long, grid_log_lambda_long, max_mu, min_mu));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_countirt_logFactorial", (DL_FUNC) &_countirt_logFactorial, 1},
    {"_countirt_computeA", (DL_FUNC) &_countirt_computeA, 5},
    {"_countirt_computeB", (DL_FUNC) &_countirt_computeB, 5},
    {"_countirt_computeQ", (DL_FUNC) &_countirt_computeQ, 4},
    {"_countirt_computeW", (DL_FUNC) &_countirt_computeW, 4},
    {"_countirt_computeR", (DL_FUNC) &_countirt_computeR, 5},
    {"_countirt_computepp", (DL_FUNC) &_countirt_computepp, 3},
    {"_countirt_computepp_allnodes", (DL_FUNC) &_countirt_computepp_allnodes, 3},
    {"_countirt_computer", (DL_FUNC) &_countirt_computer, 2},
    {"_countirt_computer_allnodes", (DL_FUNC) &_countirt_computer_allnodes, 2},
    {"_countirt_computef", (DL_FUNC) &_countirt_computef, 1},
    {"_countirt_computef_allnodes", (DL_FUNC) &_countirt_computef_allnodes, 1},
    {"_countirt_computeh", (DL_FUNC) &_countirt_computeh, 2},
    {"_countirt_computeh_allnodes", (DL_FUNC) &_countirt_computeh_allnodes, 2},
    {"_countirt_interp_from_grid", (DL_FUNC) &_countirt_interp_from_grid, 5},
    {"_countirt_interp_from_grid_v", (DL_FUNC) &_countirt_interp_from_grid_v, 5},
    {"_countirt_interp_from_grid_m", (DL_FUNC) &_countirt_interp_from_grid_m, 5},
    {"_countirt_interp_from_grid_lin_m", (DL_FUNC) &_countirt_interp_from_grid_lin_m, 5},
    {"_countirt_dcmp_cpp", (DL_FUNC) &_countirt_dcmp_cpp, 10},
    {"_countirt_grad_cmp_cpp", (DL_FUNC) &_countirt_grad_cmp_cpp, 17},
    {"_countirt_grad_cmp_fixdisps_cpp", (DL_FUNC) &_countirt_grad_cmp_fixdisps_cpp, 11},
    {"_countirt_grad_cmp_fixalphas_cpp", (DL_FUNC) &_countirt_grad_cmp_fixalphas_cpp, 13},
    {"_countirt_grad_cmp_logdisps_cpp", (DL_FUNC) &_countirt_grad_cmp_logdisps_cpp, 14},
    {"_countirt_grad_cmp_samedisp_cpp", (DL_FUNC) &_countirt_grad_cmp_samedisp_cpp, 17},
    {"_countirt_grad_cmp_samedisp_cpp_lininterp", (DL_FUNC) &_countirt_grad_cmp_samedisp_cpp_lininterp, 15},
    {"_countirt_grad_cmp_samealpha_cpp", (DL_FUNC) &_countirt_grad_cmp_samealpha_cpp, 14},
    {"_countirt_ell_cmp_cpp", (DL_FUNC) &_countirt_ell_cmp_cpp, 12},
    {"_countirt_e_values_cpp", (DL_FUNC) &_countirt_e_values_cpp, 12},
    {"_countirt_e_values_cpp_lininterp", (DL_FUNC) &_countirt_e_values_cpp_lininterp, 11},
    {"_countirt_marg_ll_cpp", (DL_FUNC) &_countirt_marg_ll_cpp, 12},
    {"_countirt_marg_ll_cpp_lininterp", (DL_FUNC) &_countirt_marg_ll_cpp_lininterp, 10},
    {"_countirt_grad_cmp_newem_cpp", (DL_FUNC) &_countirt_grad_cmp_newem_cpp, 12},
    {"_countirt_grad_cmp_newem_cpp2", (DL_FUNC) &_countirt_grad_cmp_newem_cpp2, 13},
    {"_countirt_grad_cmp_with_pcov_cpp", (DL_FUNC) &_countirt_grad_cmp_with_pcov_cpp, 15},
    {"_countirt_grad_cmp_with_icov_cpp", (DL_FUNC) &_countirt_grad_cmp_with_icov_cpp, 15},
    {"_countirt_grad_cmp_fixdisps_newem_cpp", (DL_FUNC) &_countirt_grad_cmp_fixdisps_newem_cpp, 13},
    {"_countirt_grad_cmp_with_pcov_fixdisps_cpp", (DL_FUNC) &_countirt_grad_cmp_with_pcov_fixdisps_cpp, 15},
    {"_countirt_grad_cmp_with_icov_fixdisps_cpp", (DL_FUNC) &_countirt_grad_cmp_with_icov_fixdisps_cpp, 15},
    {"_countirt_grad_cmp_fixalphas_newem_cpp", (DL_FUNC) &_countirt_grad_cmp_fixalphas_newem_cpp, 13},
    {"_countirt_grad_cmp_with_pcov_fixalphas_cpp", (DL_FUNC) &_countirt_grad_cmp_with_pcov_fixalphas_cpp, 15},
    {"_countirt_grad_cmp_with_icov_fixalphas_cpp", (DL_FUNC) &_countirt_grad_cmp_with_icov_fixalphas_cpp, 15},
    {"_countirt_grad_cmp_samedisps_newem_cpp", (DL_FUNC) &_countirt_grad_cmp_samedisps_newem_cpp, 13},
    {"_countirt_grad_cmp_with_pcov_samedisps_cpp", (DL_FUNC) &_countirt_grad_cmp_with_pcov_samedisps_cpp, 15},
    {"_countirt_grad_cmp_with_icov_samedisps_cpp", (DL_FUNC) &_countirt_grad_cmp_with_icov_samedisps_cpp, 15},
    {"_countirt_grad_cmp_samealphas_newem_cpp", (DL_FUNC) &_countirt_grad_cmp_samealphas_newem_cpp, 13},
    {"_countirt_grad_cmp_with_pcov_samealphas_cpp", (DL_FUNC) &_countirt_grad_cmp_with_pcov_samealphas_cpp, 15},
    {"_countirt_grad_cmp_with_icov_samealphas_cpp", (DL_FUNC) &_countirt_grad_cmp_with_icov_samealphas_cpp, 15},
    {"_countirt_grad_ll_cmp_ability_1P_cpp", (DL_FUNC) &_countirt_grad_ll_cmp_ability_1P_cpp, 11},
    {"_countirt_ell_cmp_newem_cpp", (DL_FUNC) &_countirt_ell_cmp_newem_cpp, 12},
    {"_countirt_ell_cmp_with_pcov_cpp", (DL_FUNC) &_countirt_ell_cmp_with_pcov_cpp, 16},
    {"_countirt_ell_cmp_with_icov_cpp", (DL_FUNC) &_countirt_ell_cmp_with_icov_cpp, 16},
    {"_countirt_e_values_newem_cpp", (DL_FUNC) &_countirt_e_values_newem_cpp, 12},
    {"_countirt_e_values_newem_cpp2", (DL_FUNC) &_countirt_e_values_newem_cpp2, 12},
    {"_countirt_estep_cmp_with_icov_cpp", (DL_FUNC) &_countirt_estep_cmp_with_icov_cpp, 14},
    {"_countirt_estep_cmp_with_pcov_cpp", (DL_FUNC) &_countirt_estep_cmp_with_pcov_cpp, 14},
    {NULL, NULL, 0}
};

RcppExport void R_init_countirt(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
